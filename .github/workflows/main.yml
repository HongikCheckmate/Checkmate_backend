name: CI/CD using github actions & docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project1/project1 
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle Wrapper
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    # Docker build & Push 
    - name: Docker build & push to Docker hub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/checkmate .
        docker push ${{ secrets.DOCKER_USERNAME }}/checkmate

    # EC2 배포
    - name: Docker image pull & Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }} # EC2 인스턴스 퍼블릭 DNS
        username: ec2-user
        key: ${{ secrets.EC2_PRIVATE_KEY }} # pem 키
        # 도커 작업
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/checkmate:latest
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm -f checkmate-app 2>/dev/null || true
          sudo docker run -d --log-driver=syslog --env-file /opt/checkmate/.env -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/checkmate:latest
          sudo docker image prune -a -f